#!/bin/sh

# immediately exit when error occurs
set -e

usage() {
	echo "usage: bos [-h] {factory_reset,run_recovery,ip_report} ..."
	echo
	echo "positional arguments:"
	echo "  {factory_reset,run_recovery}"
	echo "    factory_reset       reboot and initiate factory reset"
	echo "    run_recovery        reboot to recovery mode"
	echo "    ip_report           broadcast IP and MAC address of device"
	echo
	echo "optional arguments:"
	echo "  -h, --help            show this help message and exit"
}

factory_reset() {
	if [ $# -gt 0 ]; then
		echo "command 'factory_reset' does not take any argument" >&2
		exit 1
	fi
	# erase U-Boot environment
	mtd erase uboot_env
	# U-Boot load default environment which initiate factory reset
	reboot
}

run_recovery() {
	set +e
	if [ $# -gt 0 ]; then
		echo "command 'run_recovery' does not take any argument" >&2
		exit 1
	fi
	# check if uboot_env partition is not corrupted
	if [ -n "$(fw_printenv 2>&1 >/dev/null)" ]; then
		echo "U-Boot environment is corrupted and recovery mode cannot be run" >&2
		echo "Factory reset can fix this issue" >&2
		exit 1
	fi
	if [ $(uci get network.lan.proto) == 'static' ]; then
		net_ip=$(uci get network.lan.ipaddr 2>/dev/null)
		net_mask=$(uci get network.lan.netmask 2>/dev/null)
		net_gateway=$(uci get network.lan.gateway 2>/dev/null)
		net_dns_servers=$(uci get network.lan.dns 2>/dev/null | tr " " ,)
	fi
	net_hostname=$(uci get network.lan.hostname 2>/dev/null)
	[ -n "$net_hostname" ] || net_hostname=$(cat /proc/sys/kernel/hostname 2>/dev/null)
	recovery_mtdparts=$(fw_printenv -n recovery_mtdparts 2>/dev/null)
	if [ -n "$recovery_mtdparts" ]; then
		# append overlapping partition with bOS U-Boot environment
		recovery_mtdparts="$recovery_mtdparts,512k@0x700000(recovery_uboot_env)"
	fi
	# set 'recovery' variable in U-Boot environment
	fw_setenv --script - <<-EOF
		recovery=yes
		recovery_net_ip=$net_ip
		recovery_net_mask=$net_mask
		recovery_net_gateway=$net_gateway
		recovery_net_dns_servers=$net_dns_servers
		recovery_net_hostname=$net_hostname
		recovery_mtdparts=$recovery_mtdparts
	EOF
	# U-Boot boot from different partition when variable 'recovery' is set
	reboot
}

ip_report() {
	if [ $# -gt 0 ]; then
		echo "command 'ip_report' does not take any argument" >&2
		exit 1
	fi
	# check if it is enabled in configuration
	[ $(uci get bos.ip_report.enable) == '1' ] || return 0
	# get message and socat configuration
	local format=$(uci get bos.ip_report.format)
	local socat_arg=$(uci get bos.ip_report.socat)
	# format and send message with socat utility
	local ip_addr=$(ip route get 1 | awk '{print $NF;exit}')
	local mac_addr=$(cat /sys/class/net/eth0/address)
	local hostname=$(uname -n)
	format="${format//\${IP\}/$ip_addr}"
	format="${format//\${MAC\}/$mac_addr}"
	format="${format//\${HOSTNAME\}/$hostname}"
	echo -n "$format" | socat - "$socat_arg"
}

# check number of arguments
if [ $# -lt 1 ]; then
	echo "missing command argument" >&2
	exit 1
fi

# try to find command
command="$1"

case $command in
	factory_reset|run_recovery|ip_report)
		shift
		$command "$@"
	;;
	-h|--help)
		usage
	;;
	*)  # unknown command
		echo "unknown command '$command'" >&2
		exit 1
	;;
esac
